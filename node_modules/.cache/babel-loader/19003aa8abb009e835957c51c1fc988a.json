{"ast":null,"code":"import _slicedToArray from \"/home/meetrix/meetrix/internal/corona-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/meetrix/meetrix/internal/corona-dashboard/src/components/hospitals.js\";\nimport React, { useState, useEffect } from 'react';\nimport { MDBDataTable } from 'mdbreact';\n\nconst axios = require('axios');\n\nconst DatatablePage = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        rows = _useState2[0],\n        setRows = _useState2[1];\n\n  useEffect(() => {\n    axios.get('https://hpb.health.gov.lk/api/get-current-statistical').then(response => {\n      //console.log(response.data.data);\n      console.log(response.data.data.hospital_data);\n      const hos = response.data.data.hospital_data;\n      console.log('hos', hos);\n      const rows = hos.map(hos => ({\n        id: hos.id,\n        HospitalName: hos.hospital.name,\n        HospitalNameSinhala: hos.hospital.name_si,\n        TreatedSriLankans: hos.cumulative_local,\n        TreatedForeigners: hos.cumulative_foreign,\n        treating_local: hos.treatment_local,\n        treating_foreign: hos.treatment_foreign\n      }));\n      console.log(rows);\n      setRows(rows);\n    });\n  }, []);\n  const data = {\n    columns: [{\n      label: 'id',\n      field: 'id',\n      sort: 'asc',\n      width: 10\n    }, {\n      label: 'Hospital Names',\n      field: 'HospitalName',\n      sort: 'asc',\n      width: 10\n    }, {\n      label: 'HospitalNames (Sinhala)',\n      field: 'HospitalNameSinhala',\n      sort: 'asc',\n      width: 10\n    }, {\n      label: 'Treated SriLankans',\n      field: 'TreatedSriLankans',\n      sort: 'asc',\n      width: 15\n    }, {\n      label: 'Treated  Foreigners',\n      field: 'TreatedForeigners',\n      sort: 'asc',\n      width: 10\n    }, {\n      label: 'Treating Sri Lankans',\n      field: 'treating_local',\n      sort: 'asc',\n      width: 10\n    }, {\n      label: 'Treating Foreigners',\n      field: 'treating_foreign',\n      sort: 'asc',\n      width: 10\n    }],\n    rows: rows\n  };\n  console.log('rooooo', rows);\n  return /*#__PURE__*/React.createElement(MDBDataTable, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default DatatablePage;","map":{"version":3,"sources":["/home/meetrix/meetrix/internal/corona-dashboard/src/components/hospitals.js"],"names":["React","useState","useEffect","MDBDataTable","axios","require","DatatablePage","rows","setRows","get","then","response","console","log","data","hospital_data","hos","map","id","HospitalName","hospital","name","HospitalNameSinhala","name_si","TreatedSriLankans","cumulative_local","TreatedForeigners","cumulative_foreign","treating_local","treatment_local","treating_foreign","treatment_foreign","columns","label","field","sort","width"],"mappings":"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","sourcesContent":["import React , { useState, useEffect } from 'react';\nimport { MDBDataTable } from 'mdbreact';\nconst axios = require('axios');\n\nconst DatatablePage = () => {\n\n    const [rows, setRows] = useState();\n\n\n   useEffect( () => {\n       \n\n    \n\n    axios.get('https://hpb.health.gov.lk/api/get-current-statistical')\n        .then(response => {\n            //console.log(response.data.data);\n            console.log(response.data.data.hospital_data);\n\n            const hos = response.data.data.hospital_data;\n\n            console.log('hos',hos);\n            const rows = hos.map(hos => (\n                \n                { \n\n                id: hos.id, \n                HospitalName : hos.hospital.name,\n                HospitalNameSinhala : hos.hospital.name_si,\n                TreatedSriLankans : hos.cumulative_local,\n                TreatedForeigners : hos.cumulative_foreign,\n                treating_local : hos.treatment_local,\n                treating_foreign : hos.treatment_foreign\n                \n            \n            \n            \n                }));\n           console.log(rows);\n    \n           setRows(rows);\n        });\n      \n        \n      },[])\n  const data = {\n    columns: [\n     \n      {\n        label: 'id',\n        field: 'id',\n        sort: 'asc',\n        width: 10\n      },\n      {\n        label: 'Hospital Names',\n        field: 'HospitalName',\n        sort: 'asc',\n        width: 10\n      },\n      {\n        label: 'HospitalNames (Sinhala)',\n        field: 'HospitalNameSinhala',\n        sort: 'asc',\n        width: 10\n      },\n      {\n        label: 'Treated SriLankans',\n        field: 'TreatedSriLankans',\n        sort: 'asc',\n        width: 15\n      },\n      {\n        label: 'Treated  Foreigners',\n        field: 'TreatedForeigners',\n        sort: 'asc',\n        width: 10\n      },\n      {\n        label: 'Treating Sri Lankans',\n        field: 'treating_local',\n        sort: 'asc',\n        width: 10\n      },\n      {\n        label: 'Treating Foreigners',\n        field: 'treating_foreign',\n        sort: 'asc',\n        width: 10\n      }\n\n    ],\n    rows: rows\n  };\n\n  console.log('rooooo',rows);\n\n  return (\n    <MDBDataTable\n      striped\n      bordered\n      hover\n      data={data}\n    />\n  );\n}\n\nexport default DatatablePage;"]},"metadata":{},"sourceType":"module"}