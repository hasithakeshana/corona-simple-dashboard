{"ast":null,"code":"import _slicedToArray from \"/home/meetrix/meetrix/internal/MDB-React-Free-npm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/meetrix/meetrix/internal/MDB-React-Free-npm/src/components/graph.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\n\nconst axios = require('axios');\n\nconst ChartsPage = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        global_new = _useState2[0],\n        setGlobalNewCases = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        global_total = _useState4[0],\n        setGlobalTotalCases = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        global_deaths = _useState6[0],\n        setGlobalDeaths = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        global_new_deaths = _useState8[0],\n        setGlobalNewDeaths = _useState8[1];\n\n  const _useState9 = useState(),\n        _useState10 = _slicedToArray(_useState9, 2),\n        global_recovered = _useState10[0],\n        setGlobalRecovered = _useState10[1];\n\n  useEffect(() => {\n    axios.get('https://hpb.health.gov.lk/api/get-current-statistical').then(response => {\n      console.log(response.data.data);\n      setGlobalNewCases(response.data.data.global_new_cases);\n      setGlobalTotalCases(response.data.data.global_total_cases);\n      setGlobalDeaths(response.data.data.global_deaths);\n      setGlobalNewDeaths(response.data.data.global_new_deaths);\n      setGlobalRecovered(response.data.data.global_recovered);\n    });\n  }, []);\n  const state = {\n    dataDoughnut: {\n      labels: [\"Red\", \"Green\", \"Yellow\", \"Grey\", \"Dark Grey\"],\n      datasets: [{\n        data: [global_total, global_new, global_deaths, global_new_deaths, global_recovered],\n        backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\", \"#4D5360\"],\n        hoverBackgroundColor: [\"#FF5A5E\", \"#5AD3D1\", \"#FFC870\", \"#A8B3C5\", \"#616774\"]\n      }]\n    }\n  };\n  return /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"h1-responsive font-weight-bold text-center my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 8\n    }\n  }, \"COVID -19 Global Statistics\"), /*#__PURE__*/React.createElement(Doughnut, {\n    data: state.dataDoughnut,\n    options: {\n      responsive: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ChartsPage;","map":{"version":3,"sources":["/home/meetrix/meetrix/internal/MDB-React-Free-npm/src/components/graph.js"],"names":["React","useState","useEffect","Doughnut","MDBContainer","axios","require","ChartsPage","global_new","setGlobalNewCases","global_total","setGlobalTotalCases","global_deaths","setGlobalDeaths","global_new_deaths","setGlobalNewDeaths","global_recovered","setGlobalRecovered","get","then","response","console","log","data","global_new_cases","global_total_cases","state","dataDoughnut","labels","datasets","backgroundColor","hoverBackgroundColor","responsive"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,YAAT,QAA6B,UAA7B;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA,oBAEiBN,QAAQ,EAFzB;AAAA;AAAA,QAEhBO,UAFgB;AAAA,QAEJC,iBAFI;;AAAA,qBAGuBR,QAAQ,EAH/B;AAAA;AAAA,QAGdS,YAHc;AAAA,QAGAC,mBAHA;;AAAA,qBAIoBV,QAAQ,EAJ5B;AAAA;AAAA,QAIdW,aAJc;AAAA,QAICC,eAJD;;AAAA,qBAK2BZ,QAAQ,EALnC;AAAA;AAAA,QAKda,iBALc;AAAA,QAKKC,kBALL;;AAAA,qBAM0Bd,QAAQ,EANlC;AAAA;AAAA,QAMde,gBANc;AAAA,QAMIC,kBANJ;;AAQrBf,EAAAA,SAAS,CAAE,MAAM;AAEfG,IAAAA,KAAK,CAACa,GAAN,CAAU,uDAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcA,IAA1B;AAMJd,MAAAA,iBAAiB,CAACW,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBC,gBAApB,CAAjB;AACAb,MAAAA,mBAAmB,CAACS,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBE,kBAApB,CAAnB;AACAZ,MAAAA,eAAe,CAACO,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBX,aAApB,CAAf;AACAG,MAAAA,kBAAkB,CAACK,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBT,iBAApB,CAAlB;AACAG,MAAAA,kBAAkB,CAACG,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBP,gBAApB,CAAlB;AAEC,KAdD;AAiBD,GAnBQ,EAmBP,EAnBO,CAAT;AAqBH,QAAMU,KAAK,GAAG;AACbC,IAAAA,YAAY,EAAE;AACZC,MAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,EAAmC,WAAnC,CADI;AAEZC,MAAAA,QAAQ,EAAE,CACR;AACEN,QAAAA,IAAI,EAAE,CAACb,YAAD,EAAeF,UAAf,EAA2BI,aAA3B,EAA0CE,iBAA1C,EAA6DE,gBAA7D,CADR;AAEEc,QAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAFnB;AAGEC,QAAAA,oBAAoB,EAAE,CACpB,SADoB,EAEpB,SAFoB,EAGpB,SAHoB,EAIpB,SAJoB,EAKpB,SALoB;AAHxB,OADQ;AAFE;AADD,GAAd;AAmBC,sBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAI,IAAA,SAAS,EAAC,iDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADH,eAIE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEL,KAAK,CAACC,YAAtB;AAAoC,IAAA,OAAO,EAAE;AAAEK,MAAAA,UAAU,EAAE;AAAd,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAUD,CA1DD;;AA4DA,eAAezB,UAAf","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nconst axios = require('axios');\n\nconst ChartsPage = () => {\n\n  const [global_new, setGlobalNewCases] = useState();\n    const [global_total, setGlobalTotalCases] = useState();\n    const [global_deaths, setGlobalDeaths] = useState();\n    const [global_new_deaths, setGlobalNewDeaths] = useState();\n    const [global_recovered, setGlobalRecovered] = useState();\n\n    useEffect( () => {\n       \n      axios.get('https://hpb.health.gov.lk/api/get-current-statistical')\n      .then(response => {\n          console.log(response.data.data);\n         \n          \n     \n\n\n      setGlobalNewCases(response.data.data.global_new_cases);\n      setGlobalTotalCases(response.data.data.global_total_cases);\n      setGlobalDeaths(response.data.data.global_deaths);\n      setGlobalNewDeaths(response.data.data.global_new_deaths);\n      setGlobalRecovered(response.data.data.global_recovered);\n\n      })\n    \n      \n    },[])\n\n const state = {\n  dataDoughnut: {\n    labels: [\"Red\", \"Green\", \"Yellow\", \"Grey\", \"Dark Grey\"],\n    datasets: [\n      {\n        data: [global_total, global_new, global_deaths, global_new_deaths, global_recovered],\n        backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\", \"#4D5360\"],\n        hoverBackgroundColor: [\n          \"#FF5A5E\",\n          \"#5AD3D1\",\n          \"#FFC870\",\n          \"#A8B3C5\",\n          \"#616774\"\n        ]\n      }\n    ]\n  }\n}\n\n  return (\n    <MDBContainer>\n       <h2 className=\"h1-responsive font-weight-bold text-center my-5\">\n        COVID -19 Global Statistics \n      </h2>\n      <Doughnut data={state.dataDoughnut} options={{ responsive: true }} />\n    </MDBContainer>\n\n    );\n  \n}\n\nexport default ChartsPage;"]},"metadata":{},"sourceType":"module"}